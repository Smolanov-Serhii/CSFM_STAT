/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((module) => {

eval("var token = $('meta[name=\"csrf-token\"]').attr('content');\nmodule.exports = {\n  module: {\n    rules: [{\n      // You can use `regexp`\n      // test: /vendor\\.js/$\n      test: /\\.css$/,\n      loader: 'exports-loader',\n      use: ['style-loader', 'css-loader'] // options: {\n      //     exports: 'myFunction',\n      // },\n\n    }]\n  },\n  token: token\n}; // const CodeMirror = require(\"codemirror\");\n// require('codemirror/addon/edit/matchbrackets');\n// require('codemirror/addon/edit/closebrackets');\n// require('codemirror/addon/scroll/annotatescrollbar');\n// require('codemirror/addon/search/matchesonscrollbar');\n// require('codemirror/addon/search/searchcursor');\n// require('codemirror/addon/search/match-highlighter');\n// module.exports = {\n//     token, CodeMirror\n// }\n// module.exports = { token };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwLmpzPzZkNDAiXSwibmFtZXMiOlsidG9rZW4iLCIkIiwiYXR0ciIsIm1vZHVsZSIsImV4cG9ydHMiLCJydWxlcyIsInRlc3QiLCJsb2FkZXIiLCJ1c2UiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLEtBQUssR0FBR0MsQ0FBQyxDQUFDLHlCQUFELENBQUQsQ0FBNkJDLElBQTdCLENBQWtDLFNBQWxDLENBQWQ7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JELEVBQUFBLE1BQU0sRUFBRTtBQUNKRSxJQUFBQSxLQUFLLEVBQUUsQ0FDSDtBQUNJO0FBQ0E7QUFDQUMsTUFBQUEsSUFBSSxFQUFFLFFBSFY7QUFJSUMsTUFBQUEsTUFBTSxFQUFFLGdCQUpaO0FBS0lDLE1BQUFBLEdBQUcsRUFBRSxDQUFDLGNBQUQsRUFBaUIsWUFBakIsQ0FMVCxDQU1JO0FBQ0E7QUFDQTs7QUFSSixLQURHO0FBREgsR0FESztBQWViUixFQUFBQSxLQUFLLEVBQUVBO0FBZk0sQ0FBakIsQyxDQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdG9rZW4gPSAkKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCJdJykuYXR0cignY29udGVudCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBtb2R1bGU6IHtcbiAgICAgICAgcnVsZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAvLyBZb3UgY2FuIHVzZSBgcmVnZXhwYFxuICAgICAgICAgICAgICAgIC8vIHRlc3Q6IC92ZW5kb3JcXC5qcy8kXG4gICAgICAgICAgICAgICAgdGVzdDogL1xcLmNzcyQvLFxuICAgICAgICAgICAgICAgIGxvYWRlcjogJ2V4cG9ydHMtbG9hZGVyJyxcbiAgICAgICAgICAgICAgICB1c2U6IFsnc3R5bGUtbG9hZGVyJywgJ2Nzcy1sb2FkZXInXVxuICAgICAgICAgICAgICAgIC8vIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAvLyAgICAgZXhwb3J0czogJ215RnVuY3Rpb24nLFxuICAgICAgICAgICAgICAgIC8vIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgIH0sXG4gICAgdG9rZW46IHRva2VuXG59O1xuLy8gY29uc3QgQ29kZU1pcnJvciA9IHJlcXVpcmUoXCJjb2RlbWlycm9yXCIpO1xuLy8gcmVxdWlyZSgnY29kZW1pcnJvci9hZGRvbi9lZGl0L21hdGNoYnJhY2tldHMnKTtcbi8vIHJlcXVpcmUoJ2NvZGVtaXJyb3IvYWRkb24vZWRpdC9jbG9zZWJyYWNrZXRzJyk7XG4vLyByZXF1aXJlKCdjb2RlbWlycm9yL2FkZG9uL3Njcm9sbC9hbm5vdGF0ZXNjcm9sbGJhcicpO1xuLy8gcmVxdWlyZSgnY29kZW1pcnJvci9hZGRvbi9zZWFyY2gvbWF0Y2hlc29uc2Nyb2xsYmFyJyk7XG4vLyByZXF1aXJlKCdjb2RlbWlycm9yL2FkZG9uL3NlYXJjaC9zZWFyY2hjdXJzb3InKTtcbi8vIHJlcXVpcmUoJ2NvZGVtaXJyb3IvYWRkb24vc2VhcmNoL21hdGNoLWhpZ2hsaWdodGVyJyk7XG4vLyBtb2R1bGUuZXhwb3J0cyA9IHtcbi8vICAgICB0b2tlbiwgQ29kZU1pcnJvclxuLy8gfVxuXG4vLyBtb2R1bGUuZXhwb3J0cyA9IHsgdG9rZW4gfTtcbiJdLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/js/blocks/list.js":
/*!*************************************!*\
  !*** ./resources/js/blocks/list.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var _require = __webpack_require__(/*! ../app.js */ \"./resources/js/app.js\"),\n    token = _require.token; // ************\n// ************\n// REMOVE BLOCK\n// ************\n// ************\n\n\n$(document).on('click', '.remove-block', function () {\n  var delete_button = $('#deleteBlock')[0];\n  delete_button.dataset.url = this.dataset.url;\n  delete_button.dataset.block_id = this.dataset.block_id;\n});\n$('#deleteBlock').on('click', function () {\n  var block_id = this.dataset.block_id;\n  $.ajax({\n    method: 'POST',\n    url: this.dataset.url,\n    data: {\n      _token: token\n    },\n    success: function success(data) {\n      $('#confirmDeleteBlock').modal('hide');\n      $(\"#\".concat(block_id)).remove();\n      $(document).Toasts('create', {\n        \"class\": 'bg-danger',\n        title: 'Статус',\n        subtitle: 'OK',\n        body: 'Блок удален',\n        autohide: true,\n        delay: 2e3\n      });\n    }\n  });\n}); // ************\n// ************\n// EDIT BLOCK CONTENT\n// ************\n// ************\n\n$(document).on('click', '.edit-content', function (e) {\n  // console.log(e);\n  // console.log(this.dataset.url);\n  // return false;\n  $.ajax({\n    method: 'get',\n    url: this.dataset.url,\n    // data: method == 'post' ? {'_token': token} : {},\n    success: function success(data) {\n      $('#modal_body')[0].innerHTML = data.form; // $('#contentList')[0].innerHTML = data.content;\n    }\n  });\n});\n$(document).on('click', '#saveContent', function (e) {\n  var form = $('#contentForm')[0];\n  var formData = new FormData(form);\n  formData.append('_token', token);\n  $.ajax({\n    method: 'POST',\n    url: form.action,\n    data: formData,\n    dataType: 'JSON',\n    contentType: false,\n    cache: false,\n    processData: false,\n    success: function success(data) {\n      // console.log(data);\n      if (data.errors) {// alert.show()\n        // $.each(data.errors, function (key,value) {\n        //     alert.append(`<p>${value}</p>`);\n        // })\n      } else if (data.status) {\n        $('#contentFormModal').modal('toggle');\n        $(document).Toasts('create', {\n          \"class\": data.toasts[\"class\"],\n          title: data.toasts.title,\n          body: data.toasts.body,\n          position: 'bottomRight'\n        }); // form.reset()\n        // if(exit) $('#contentFormModal').modal('toggle');\n        // $(document).Toasts('create', createBlockData)\n        // $(`#${data.block_id} .contents`)[0].innerHTML = data.content;\n        // loadForm(form.action, form.method)\n      }\n    }\n  }); // e.preventDefault();\n  // return false;\n}); // ************\n// ************\n// SORT AND DRAG BLOCK\n// ************\n// ************\n\nfunction refreshSortable() {\n  $(\"#blockList\").sortable({\n    revert: true,\n    update: function update(event, ui) {\n      var sortedIDs = $(\"#blockList\").sortable(\"toArray\");\n      $.ajax({\n        method: 'POST',\n        url: '/admin/pages/content/reorder',\n        data: {\n          _token: token,\n          sequence: sortedIDs\n        },\n        success: function success(data) {\n          $(document).Toasts('create', {\n            \"class\": 'bg-success',\n            title: 'Статус',\n            subtitle: 'OK',\n            body: 'Последовательность блоков на странице успешно изменена',\n            autohide: true,\n            delay: 2e3\n          });\n        }\n      });\n    }\n  }).disableSelection();\n}\n\nrefreshSortable();\n$(\".template-item\").draggable({\n  connectToSortable: \"#blockList\",\n  helper: \"clone\",\n  stop: function stop(event, ui) {\n    $.ajax({\n      method: 'POST',\n      url: $('#blockCreateForm')[0].action,\n      data: {\n        _token: token,\n        enabled: 1,\n        block_template_id: event.target.dataset.template_id\n      },\n      success: function success(data) {\n        if (data.errors) {} else if (data.status) {\n          $('#blockList').sortable('destroy');\n          $('#blockList')[0].outerHTML = data.html;\n          refreshSortable();\n        }\n      }\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/blocks/list.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/blocks/list.js");
/******/ 	
/******/ })()
;